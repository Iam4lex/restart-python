{"filter":false,"title":"debug-caesar-1.py","tooltip":"/debug-caesar-1.py","undoManager":{"mark":2,"position":2,"stack":[[{"start":{"row":0,"column":0},"end":{"row":3,"column":0},"action":"remove","lines":["\"\"\"","Your module description","\"\"\"",""],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":55,"column":24},"action":"insert","lines":["# Module Lab: Caesar Cipher Program Bug #1","#","# In a previous lab, you created a Caesar cipher program. This version of","# the program is buggy. Use a debugger to find the bug and fix it.","","# Double the given alphabet","def getDoubleAlphabet(alphabet):","    doubleAlphabet = alphabet + alphabet","    return doubleAlphabet","","# Get a message to encrypt","def getMessage():","    stringToEncrypt = input(\"Please enter a message to encrypt: \")","    return stringToEncrypt","","# Get a cipher key","def getCipherKey():","    shiftAmount = input(\"Please enter a key (whole number from 1-25): \")","    return shiftAmount","","# Encrypt message","def encryptMessage(message, cipherKey, alphabet):","    encryptedMessage = \"\"","    uppercaseMessage = \"\"","    uppercaseMessage = message.upper()","    for currentCharacter in uppercaseMessage:","        position = alphabet.find(currentCharacter)","        newPosition = position + cipherKey","        if currentCharacter in alphabet:","            encryptedMessage = encryptedMessage + alphabet[newPosition]","        else:","            encryptedMessage = encryptedMessage + currentCharacter","    return encryptedMessage","","# Decrypt message","def decryptMessage(message, cipherKey, alphabet):","    decryptKey = -1 * int(cipherKey)","    return encryptMessage(message, decryptKey, alphabet)","","# Main program logic","def runCaesarCipherProgram():","    myAlphabet=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"","    print(f'Alphabet: {myAlphabet}')","    myAlphabet2 = getDoubleAlphabet(myAlphabet)","    print(f'Alphabet2: {myAlphabet2}')","    myMessage = getMessage()","    print(myMessage)","    myCipherKey = getCipherKey()","    print(myCipherKey)","    myEncryptedMessage = encryptMessage(myMessage, myCipherKey, myAlphabet2)","    print(f'Encrypted Message: {myEncryptedMessage}')","    myDecryptedMessage = decryptMessage(myEncryptedMessage, myCipherKey, myAlphabet2)","    print(f'Decrypted Message: {myDecryptedMessage}')","","# Main logic","runCaesarCipherProgram()"],"id":2}],[{"start":{"row":55,"column":24},"end":{"row":56,"column":0},"action":"insert","lines":["",""],"id":3},{"start":{"row":56,"column":0},"end":{"row":57,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":57,"column":0},"end":{"row":72,"column":27},"action":"insert","lines":["Alphabet: ABCDEFGHIJKLMNOPQRSTUVWXYZ","Alphabet2: ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ","Please enter a message to encrypt: AWS Restart rocks","AWS Restart rocks","Please enter a key (whole number from 1-25): 2","2","Traceback (most recent call last):","  File \"/home/ec2-user/environment/caesar_cipher_program_bug_1.py\", line 56, in <module>","    runCaesarCipherProgram()","  File \"/home/ec2-user/environment/caesar_cipher_program_bug_1.py\", line 50, in runCaesarCipherProgram","    myEncryptedMessage = encryptMessage(myMessage, myCipherKey, myAlphabet2)","  File \"/home/ec2-user/environment/caesar_cipher_program_bug_1.py\", line 28, in encryptMessage","    newPosition = position + cipherKey","TypeError: unsupported operand type(s) for +: 'int' and 'str'","","Process exited with code: 0"],"id":4}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":57,"column":0},"end":{"row":57,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1719672139954,"hash":"61b59f486abe6c1cb929e7ee8b235646dbbe156f"}